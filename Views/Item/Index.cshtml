@model PaginatedList<WebApplication1.DataTransferObjects.ItemDto>
@{
    ViewData["Title"] = "Index";
}

<div class="d-flex justify-content-between container dark-theme my-4">
    <h3>Items</h3>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Create"><button class="btn btn-success">Add Item</button></a>
    }
</div>

<div class="container">
    <form asp-action="Index" method="get" class="container mb-4">
        <input type="hidden" name="pageNumber" value="1" />
        <div class="row gx-2 gy-3 align-items-center">
            <div class="col-md-4">
                <input type="text" name="search" value="@ViewData["CurrentSearch"]" class="form-control" placeholder="Search by name or serial..." />
            </div>
            <div class="col-md-2">
                <select name="categoryId" class="form-select">
                    <option value="">All Categories</option>
                    @if (ViewData["Categories"] is SelectList categories)
                    {
                        @foreach (var category in (SelectList)ViewData["Categories"])
                        {
                            <option value="@category.Value" selected="@(category.Value == ViewData["CurrentCategory"]?.ToString())">
                                @category.Text
                            </option>
                        }
                    }

                </select>
            </div>
            <div class="col-md-2">
                <select name="sortOrder" class="form-select">
                    <option>--sort--</option>
                    <option value="price_asc" selected=@(ViewData["CurrentSort"]?.ToString() == "price_asc" ? "selected" : "")>Price Low to High</option>
                    <option value="price_desc" selected=@(ViewData["CurrentSort"]?.ToString() == "price_desc" ? "selected" : "")>Price High to Low</option>
                </select>
            </div>
            <div class="col-md-2">
                <select name="sortOrder" class="form-select">
                    <option value="">--sort--</option>
                    <option value="name_asc" selected=@(ViewData["CurrentSort"]?.ToString() == "name_asc" ? "selected" : "")>Sort by Name (A-Z)</option>
                    <option value="name_desc" selected=@(ViewData["CurrentSort"]?.ToString() == "name_desc" ? "selected" : "")>Sort by Name (Z-A)</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100">Apply</button>
            </div>
        </div>
    </form>

    <div class="row g-4">
        @if(!Model.Any())
        {
            <strong class="d-flex justify-content-center align-items-center mt-5">No Items found</strong>
        }
        else
        {
            @foreach (var item in Model)
            {
                <div class="col-md-3">
                    <div class="card bg-dark text-white hover-card d-flex flex-column @(item.Quantity <= 0 ? "out-of-stock" : "")" style="min-height: 25rem; position: relative;">
                        @if (item.Quantity <= 0)
                        {
                            <div class="stockLabel">OUT OF STOCK</div>
                        }
                        <div class="card-body d-flex flex-column">
                            <div class="image-container mb-4 d-flex justify-content-center align-items-center">
                                <img src="@Url.Content(string.IsNullOrEmpty(item.ImageUrl) ? "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTK3c711Qnpwx8NGSS2NfnYxn-j2ckJV1Zc5A&s" : item.ImageUrl)"
                                     class="fixed-image"
                                     alt="Item Image" />
                            </div>
                            <h5 class="card-title hover-underline"><a asp-action="Details" asp-route-id="@item.Id" class="text-decoration-none text-white">@item.Name</a></h5>
                            <h5 class="card-subtitle mb-2 text-success">@item.Price.ToString("C")</h5>
                            <p class="card-text">
                                <strong>Serial:</strong> @item?.SerialNumber <br />
                                <strong>Category:</strong> @item?.CategoryName <br />
                                <strong>Quantity in Stock:</strong> @item?.Quantity <br />
                            </p>
                            <div class="mt-auto">
                                @if (User.IsInRole("Admin"))
                                {
                                    <div class="d-flex justify-content-between">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary px-3">Edit</a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                                    </div>
                                }
                                else
                                {
                                    <div class="d-flex justify-content-between">
                                        <a asp-controller="Cart" asp-action="BuyNow" asp-route-id="@item.Id" class="btn btn-sm btn-warning px-3">Buy</a>
                                        <button type="button" class="btn btn-sm btn-primary add-to-cart-btn" data-id="@item.Id">Add to Cart</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>
@if (Model.TotalPages > 1)
{
    <div class="pagination-container mt-4">
        <nav>
            <ul class="pagination justify-content-center">
                <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-search="@ViewData["CurrentSearch"]"
                       asp-route-categoryId="@ViewData["CurrentCategory"]"
                       asp-route-sortOrder="@ViewData["CurrentSort"]">
                        ←
                    </a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-pageNumber="@i"
                           asp-route-search="@ViewData["CurrentSearch"]"
                           asp-route-categoryId="@ViewData["CurrentCategory"]"
                           asp-route-sortOrder="@ViewData["CurrentSort"]">
                            @i
                        </a>
                    </li>
                }
                <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-search="@ViewData["CurrentSearch"]"
                       asp-route-categoryId="@ViewData["CurrentCategory"]"
                       asp-route-sortOrder="@ViewData["CurrentSort"]">
                        →
                    </a>
                </li>
            </ul>
        </nav>
    </div>
}

<style>
    .image-container {
        width: 100%;
        height: 200px;
        overflow: hidden;
        background-color: #1e1e1e; 
    }

    .fixed-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 5px;
    }

    .hover-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
    }

    .hover-card:hover {
        transform: scale(1.03);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.6);
        cursor: pointer;
    }

    .hover-underline {
        transition: text-decoration 0.2s ease;
    }

    .hover-underline:hover {
        text-decoration: underline;
    }

    .pagination-container {
        margin-top: 2rem;
        padding: 1rem;
        background-color: #2d2d2d;
        border-radius: 5px;
    }

    .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }

    .page-link {
        color: #fff;
        background-color: #404040;
        border: 1px solid #303030;
    }

    .page-link:hover {
        color: #fff;
        background-color: #505050;
        border-color: #404040;
    }

    .page-item.disabled .page-link {
        background-color: #303030;
        border-color: #202020;
        color: #666;
    }

    .out-of-stock {
        position: relative;
        pointer-events: none;
    }

        .out-of-stock::after {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            border-radius: 0.35rem;
        }

    .stockLabel {
        position: absolute;
        top: 40%;
        left: 50%;
        text-align:center;
        transform: translate(-50%, -50%) rotate(-15deg);
        font-size: 2rem;
        font-weight: 900;
        color: #ff0000;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        z-index: 2;
        background: rgba(0, 0, 0, 0.7);
        padding: 0.5rem 1.5rem;
        border-radius: 5px;
        border: 3px solid #ff0000;
        animation: pulse 1.5s infinite;
    }

    @@keyframes pulse {
        0% {
            transform: translate(-50%, -50%) rotate(-15deg) scale(1);
        }

        50% {
            transform: translate(-50%, -50%) rotate(-15deg) scale(1.05);
        }

        100% {
            transform: translate(-50%, -50%) rotate(-15deg) scale(1);
        }
    }

</style>
