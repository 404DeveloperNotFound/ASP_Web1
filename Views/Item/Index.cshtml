@model List<WebApplication1.Models.Items>
@{
    ViewData["Title"] = "Index";
}

<div class="d-flex justify-content-between container dark-theme my-4">
    <h3>Items</h3>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Create"><button class="btn btn-success">Add Item</button></a>
    }
</div>

<div class="container">
    <form asp-action="Index" method="get" class="container mb-4">
        <div class="row gx-2 gy-3 align-items-center">
            <div class="col-md-4">
                <input type="text" name="search" value="@ViewData["CurrentSearch"]" class="form-control" placeholder="Search by name or serial..." />
            </div>
            <div class="col-md-2">
                <select name="categoryId" class="form-select">
                    <option value="">All Categories</option>
                    @foreach (var category in (SelectList)ViewData["Categories"])
                    {
                        <option value="@category.Value" selected="@(category.Value == ViewData["CurrentCategory"]?.ToString())">
                            @category.Text
                        </option>
                    }

                </select>
            </div>
            <div class="col-md-2">
                <select name="sortOrder" class="form-select">
                    <option>--sort--</option>
                    <option value="price_asc" selected=@(ViewData["CurrentSort"]?.ToString() == "price_asc" ? "selected" : "")>Price Low to High</option>
                    <option value="price_desc" selected=@(ViewData["CurrentSort"]?.ToString() == "price_desc" ? "selected" : "")>Price High to Low</option>
                </select>
            </div>
            <div class="col-md-2">
                <select name="sortOrder" class="form-select">
                    <option value="">--sort--</option>
                    <option value="name_asc" selected=@(ViewData["CurrentSort"]?.ToString() == "name_asc" ? "selected" : "")>Sort by Name (A-Z)</option>
                    <option value="name_desc" selected=@(ViewData["CurrentSort"]?.ToString() == "name_desc" ? "selected" : "")>Sort by Name (Z-A)</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100">Apply</button>
            </div>
        </div>
    </form>

    <div class="row g-4">
        @if(Model.Count == 0)
        {
            <strong class="d-flex justify-content-center align-items-center mt-5">No Items found</strong>
        }
        else
        {
            @foreach (var item in Model)
            {
                <div class="col-md-3">
                    <div class="card bg-dark text-white hover-card d-flex flex-column" style="min-height: 25rem">
                        <div class="card-body d-flex flex-column">
                            <div class="image-container mb-4 d-flex justify-content-center align-items-center">
                                <img src="@Url.Content(string.IsNullOrEmpty(item.ImageUrl) ? "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTK3c711Qnpwx8NGSS2NfnYxn-j2ckJV1Zc5A&s" : item.ImageUrl)"
                                     class="fixed-image"
                                     alt="Item Image" />
                            </div>
                            <h5 class="card-title hover-underline"><a asp-action="Details" asp-route-id="@item.Id" class="text-decoration-none text-white">@item.Name</a></h5>
                            <h6 class="card-subtitle mb-2 text-success">$ @item.Price.ToString("N2")</h6>
                            <p class="card-text">
                                <strong>Serial:</strong> @item?.SerialNumber <br />
                                <strong>Category:</strong> @item?.Category?.Name <br />
                                <strong>Clients:</strong>
                                @if (item.Clients != null && item.Clients.Count > 0)
                                {
                                    int cnt = 0;
                                    foreach (var i in item.Clients)
                                    {
                                        @i.Username
                                        @(cnt != item.Clients.Count - 1 ? ", " : "")
                                        cnt++;
                                    }
                                }
                                else
                                {
                                    <span>None</span>
                                }
                            </p>
                            <div class="mt-auto">
                                @if (User.IsInRole("Admin"))
                                {
                                    <div class="d-flex justify-content-between">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary px-3">Edit</a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                                    </div>
                                }
                                else
                                {
                                    <div class="d-flex justify-content-between">
                                        <a asp-controller="Cart" asp-action="BuyNow" asp-route-id="@item.Id" class="btn btn-sm btn-warning px-3">Buy</a>
                                        <button type="button" class="btn btn-sm btn-primary add-to-cart-btn" data-id="@item.Id">Add to Cart</button>
                                        @* <a asp-controller="Cart" asp-action="AddToCart" asp-route-id="@item.Id" onclick="AddedToCart()" class="btn btn-sm btn-primary add-to-cart-btn" data-id="@item.Id">Add to Cart</a> *@
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

<script>
    document.querySelectorAll('.add-to-cart-btn').forEach(btn => {
        btn.addEventListener('click', function () {
            const itemId = this.getAttribute('data-id');

            fetch(`/Cart/AddToCart/${itemId}`)
                .then(response => response.json())
                .then(data => {
                    showToast(data.message);
                })
                .catch(error => {
                    showToast("An error occurred while adding the item.");
                    console.error("Error:", error);
                });
        });
    });
</script>

<style>
    .image-container {
        width: 100%;
        height: 200px;
        overflow: hidden;
        background-color: #1e1e1e; /* Optional background */
    }

    .fixed-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 5px;
    }

    .hover-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
    }

        .hover-card:hover {
            transform: scale(1.03);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.6);
            cursor: pointer;
        }

    .hover-underline {
        transition: text-decoration 0.2s ease;
    }

        .hover-underline:hover {
            text-decoration: underline;
        }
</style>
