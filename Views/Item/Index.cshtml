@model PaginatedList<WebApplication1.DataTransferObjects.ItemDto>
@{
    ViewData["Title"] = "Index";
}

<div class="container-fluid bg-dark text-white py-2 mb-2">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center">
            <h1 class="display-6 fw-bold text-success">All Items</h1>
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="Create" class="btn btn-success btn-lg px-4">
                    <i class="fas fa-plus-circle me-2"></i>Add New Item
                </a>
            }
        </div>
    </div>
</div>

<div class="container">
    <form asp-action="Index" method="get" class="container mb-4 bg-dark p-4 rounded-3 shadow">
        <input type="hidden" name="pageNumber" value="1" />
        <div class="row gx-3 gy-3 align-items-center">
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-text bg-black text-success border-success">
                        <i class="fas fa-search">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2"
                                 stroke-linecap="round" stroke-linejoin="round" class="feather feather-search">
                                <circle cx="11" cy="11" r="8"></circle>
                                <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                            </svg>
                        </i>
                    </span>
                    <input type="text" name="search" value="@ViewData["CurrentSearch"]"
                           class="form-control bg-black text-white border-success text-light"
                           placeholder="Search by name or serial..." />
                </div>
            </div>
            <div class="col-md-2">
                <select name="categoryId" class="form-select bg-black text-white border-success">
                    <option value="">All Categories</option>
                    @if (ViewData["Categories"] is SelectList categories)
                    {
                        @foreach (var category in (SelectList)ViewData["Categories"])
                        {
                            <option value="@category.Value" selected="@(category.Value == ViewData["CurrentCategory"]?.ToString())">
                                @category.Text
                            </option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-2">
                <select name="sortOrder" class="form-select bg-black text-white border-success">
                    <option value="">-- Price Sort --</option>
                    <option value="price_asc" selected=@(ViewData["CurrentSort"]?.ToString() == "price_asc" ? "selected" : "")>Price Low to High</option>
                    <option value="price_desc" selected=@(ViewData["CurrentSort"]?.ToString() == "price_desc" ? "selected" : "")>Price High to Low</option>
                </select>
            </div>
            <div class="col-md-2">
                <select name="sortOrder" class="form-select bg-black text-white border-success">
                    <option value="">-- Name Sort --</option>
                    <option value="name_asc" selected=@(ViewData["CurrentSort"]?.ToString() == "name_asc" ? "selected" : "")>Name (A-Z)</option>
                    <option value="name_desc" selected=@(ViewData["CurrentSort"]?.ToString() == "name_desc" ? "selected" : "")>Name (Z-A)</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-success w-100 fw-bold">
                    <i class="fas fa-filter me-2"></i>Filter
                </button>
            </div>
        </div>
    </form>

    @if (!Model.Any())
    {
        <div class="text-center py-5 my-5">
            <i class="fas fa-box-open text-muted fa-4x mb-3"></i>
            <h3 class="text-white">No Items Found</h3>
            <p class="text-white">Try adjusting your search or filter criteria</p>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100 bg-black text-white @(item.Quantity <= 0 ? "out-of-stock" : "")"
                         style="box-shadow: 0 4px 8px rgba(0, 255, 0, 0.1);">
                        @if (item.Quantity <= 0)
                        {
                            <div class="stockLabel">OUT OF STOCK</div>
                        }
                        <div class="card-img-top position-relative" style="height: 200px; overflow: hidden;">
                            <img src="@Url.Content(string.IsNullOrEmpty(item.ImageUrl) ? "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTK3c711Qnpwx8NGSS2NfnYxn-j2ckJV1Zc5A&s" : item.ImageUrl)"
                                    class="w-100 h-100 object-fit-cover"
                                    alt="@item.Name" />
                            <div class="position-absolute bottom-0 start-0 end-0 p-2"
                                    style="background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);">
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title mb-0 text-success">@item.Price.ToString("C")</h5>
                            <h5 class="card-title">
                                @if (item.Quantity > 0)
                                {
                                    <a asp-action="Details" asp-route-id="@item.Id"
                                        class="text-white text-decoration-none hover-text-success">@item.Name</a>
                                }
                                else
                                {
                                    <span class="text-white">@item.Name</span>
                                }
                            </h5>
                            <div class="card-text mb-3">
                                <div class="d-flex align-items-center mb-1">
                                    <i class="fas fa-tag text-success me-2"></i>
                                    <small>@item?.CategoryName</small>
                                </div>
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-cubes text-success me-2"></i>
                                    <small>@item?.Quantity in stock</small>
                                </div>
                            </div>
                            <div class="mt-auto align-items-end">
                                @if (User.IsInRole("Admin"))
                                {
                                    <div class="d-flex justify-content-between gap-2">
                                        <a asp-action="Edit" asp-route-id="@item.Id"
                                            class="btn btn-sm btn-outline-success flex-grow-1">
                                            <i class="fas fa-edit me-1"></i> Edit
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id"
                                            class="btn btn-sm btn-outline-danger">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </div>
                                }
                                else
                                {
                                    <div class="d-flex justify-content-between gap-2">
                                        <a asp-controller="Cart" asp-action="BuyNow" asp-route-id="@item.Id"
                                            class="btn btn-sm btn-warning flex text-white @(item.Quantity <= 0 ? "disabled" : "")">
                                            Buy Now
                                        </a>
                                        <button type="button" class="btn btn-sm btn-success add-to-cart-btn px-4 @(item.Quantity <= 0 ? "disabled" : "")" data-id="@item.Id">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"
                                                    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                                    class="feather feather-shopping-cart">
                                                <circle cx="9" cy="21" r="1"></circle>
                                                <circle cx="20" cy="21" r="1"></circle>
                                                <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
                                            </svg>
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@if (Model.TotalPages > 1)
{
    <div class="container mt-5">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                    <a class="page-link bg-black text-success border-success"
                       asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-search="@ViewData["CurrentSearch"]"
                       asp-route-categoryId="@ViewData["CurrentCategory"]"
                       asp-route-sortOrder="@ViewData["CurrentSort"]">
                        <i class="fas fa-chevron-left">←</i>
                    </a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link @(i == Model.PageIndex ? "bg-success border-success" : "bg-black text-success border-success")"
                           asp-action="Index"
                           asp-route-pageNumber="@i"
                           asp-route-search="@ViewData["CurrentSearch"]"
                           asp-route-categoryId="@ViewData["CurrentCategory"]"
                           asp-route-sortOrder="@ViewData["CurrentSort"]">
                            @i
                        </a>
                    </li>
                }
                <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                    <a class="page-link bg-black text-success border-success"
                       asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-search="@ViewData["CurrentSearch"]"
                       asp-route-categoryId="@ViewData["CurrentCategory"]"
                       asp-route-sortOrder="@ViewData["CurrentSort"]">
                        <i class="fas fa-chevron-right">→</i>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
}

<style>
    .form-control::placeholder {
        color: rgba(255, 255, 255, 0.5); 
    }
    body {
        background-color: #121212;
        color: #e0e0e0;
    }

    .hover-text-success:hover {
        color: #28a745 !important;
        transition: color 0.2s ease;
    }

    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-radius: 8px;
        overflow: hidden;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 255, 0, 0.2) !important;
    }

    .object-fit-cover {
        object-fit: cover;
    }

    .out-of-stock {
        position: relative;
        opacity: 0.5;
        pointer-events: none;
    }

    .stockLabel {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(-15deg);
        font-size: 1.8rem;
        font-weight: 900;
        color: #ff3333;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
        z-index: 10;
        background: rgba(0, 0, 0, 0.8);
        padding: 0.5rem 1.5rem;
        border-radius: 5px;
        border: 2px solid #ff3333;
        animation: pulse 1.5s infinite;
    }

    @@keyframes pulse {
        0% {
            transform: translate(-50%, -50%) rotate(-15deg) scale(1);
        }

        50% {
            transform: translate(-50%, -50%) rotate(-15deg) scale(1.05);
        }

        100% {
            transform: translate(-50%, -50%) rotate(-15deg) scale(1);
        }
    }

    .page-item.active .page-link {
        background-color: #28a745;
        border-color: #28a745;
        color: white;
    }

    .page-link {
        transition: all 0.2s ease;
    }

        .page-link:hover {
            background-color: #28a745;
            border-color: #28a745;
            color: white;
        }

    .form-control:focus, .form-select:focus {
        border-color: #28a745;
        box-shadow: 0 0 0 0.25rem rgba(40, 167, 69, 0.25);
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

    .btn-outline-success:hover {
        color: #fff;
    }

    .border-success {
        border-color: #28a745 !important;
    }
</style>